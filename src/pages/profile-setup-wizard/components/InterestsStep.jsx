import React from 'react';
import Icon from '../../../components/AppIcon';

const InterestsStep = ({ 
  formData, 
  onFormDataChange, 
  errors = {},
  currentLanguage = 'en' 
}) => {
  const sectorOptions = [
    {
      id: 'technology',
      emoji: 'üíª',
      title: currentLanguage === 'hi' ? '‡§™‡•ç‡§∞‡•å‡§¶‡•ç‡§Ø‡•ã‡§ó‡§ø‡§ï‡•Ä' : 'Technology',
      description: currentLanguage === 'hi' ? '‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞, ‡§µ‡•á‡§¨ ‡§°‡•á‡§µ‡§≤‡§™‡§Æ‡•á‡§Ç‡§ü, IT ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü' : 'Software, Web Development, IT Support',
      icon: 'Laptop'
    },
    {
      id: 'business',
      emoji: 'üìä',
      title: currentLanguage === 'hi' ? '‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞' : 'Business',
      description: currentLanguage === 'hi' ? '‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü‡§ø‡§Ç‡§ó, ‡§∏‡•á‡§≤‡•ç‡§∏, ‡§¨‡§ø‡§ú‡§®‡•á‡§∏ ‡§è‡§®‡§æ‡§≤‡§ø‡§∏‡§ø‡§∏' : 'Marketing, Sales, Business Analysis',
      icon: 'TrendingUp'
    },
    {
      id: 'healthcare',
      emoji: 'üè•',
      title: currentLanguage === 'hi' ? '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ' : 'Healthcare',
      description: currentLanguage === 'hi' ? '‡§Æ‡•á‡§°‡§ø‡§ï‡§≤ ‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü, ‡§π‡•á‡§≤‡•ç‡§• ‡§ï‡•á‡§Ø‡§∞' : 'Medical Assistant, Health Care',
      icon: 'Heart'
    },
    {
      id: 'education',
      emoji: 'üìö',
      title: currentLanguage === 'hi' ? '‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ' : 'Education',
      description: currentLanguage === 'hi' ? '‡§ü‡•Ä‡§ö‡§ø‡§Ç‡§ó, ‡§ü‡•ç‡§∞‡•á‡§®‡§ø‡§Ç‡§ó, ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§∞‡§æ‡§á‡§ü‡§ø‡§Ç‡§ó' : 'Teaching, Training, Content Writing',
      icon: 'BookOpen'
    },
    {
      id: 'finance',
      emoji: 'üí∞',
      title: currentLanguage === 'hi' ? '‡§µ‡§ø‡§§‡•ç‡§§' : 'Finance',
      description: currentLanguage === 'hi' ? '‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü‡§ø‡§Ç‡§ó, ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó, ‡§á‡§®‡•ç‡§µ‡•á‡§∏‡•ç‡§ü‡§Æ‡•á‡§Ç‡§ü' : 'Accounting, Banking, Investment',
      icon: 'DollarSign'
    },
    {
      id: 'manufacturing',
      emoji: 'üè≠',
      title: currentLanguage === 'hi' ? '‡§µ‡§ø‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£' : 'Manufacturing',
      description: currentLanguage === 'hi' ? '‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§∂‡§®, ‡§ï‡•ç‡§µ‡§æ‡§≤‡§ø‡§ü‡•Ä ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤' : 'Production, Quality Control',
      icon: 'Settings'
    },
    {
      id: 'retail',
      emoji: 'üõçÔ∏è',
      title: currentLanguage === 'hi' ? '‡§ñ‡•Å‡§¶‡§∞‡§æ' : 'Retail',
      description: currentLanguage === 'hi' ? '‡§ï‡§∏‡•ç‡§ü‡§Æ‡§∞ ‡§∏‡§∞‡•ç‡§µ‡§ø‡§∏, ‡§∏‡•á‡§≤‡•ç‡§∏' : 'Customer Service, Sales',
      icon: 'ShoppingBag'
    },
    {
      id: 'agriculture',
      emoji: 'üåæ',
      title: currentLanguage === 'hi' ? '‡§ï‡•É‡§∑‡§ø' : 'Agriculture',
      description: currentLanguage === 'hi' ? '‡§´‡§æ‡§∞‡•ç‡§Æ‡§ø‡§Ç‡§ó, ‡§è‡§ó‡•ç‡§∞‡•Ä-‡§ü‡•á‡§ï' : 'Farming, Agri-Tech',
      icon: 'Leaf'
    }
  ];

  const handleSectorChange = (sectorId) => {
    const currentInterests = formData?.interests || [];
    let updatedInterests;

    if (currentInterests?.includes(sectorId)) {
      updatedInterests = currentInterests?.filter(interest => interest !== sectorId);
    } else {
      updatedInterests = [...currentInterests, sectorId];
    }

    onFormDataChange({
      ...formData,
      interests: updatedInterests
    });
  };

  const selectedInterests = formData?.interests || [];

  return (
    <div className="bg-card border border-border rounded-lg p-6 shadow-card">
      <div className="text-center mb-6">
        <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
          <Icon name="Target" size={32} className="text-primary" />
        </div>
        <h2 className="text-2xl font-heading font-semibold text-foreground mb-2">
          {currentLanguage === 'hi' ? '‡§∞‡•Å‡§ö‡§ø ‡§ï‡•á ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞' : 'Areas of Interest'}
        </h2>
        <p className="text-muted-foreground">
          {currentLanguage === 'hi' ?'‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?' :'Which sectors would you like to work in?'
          }
        </p>
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
        {sectorOptions?.map((sector) => {
          const isSelected = selectedInterests?.includes(sector?.id);
          
          return (
            <button
              key={sector?.id}
              onClick={() => handleSectorChange(sector?.id)}
              className={`
                relative p-4 rounded-lg border-2 transition-all duration-200 text-left touch-target
                ${isSelected 
                  ? 'border-primary bg-primary/10 shadow-interactive' 
                  : 'border-border bg-card hover:border-primary/50 hover:bg-muted/20'
                }
              `}
            >
              <div className="flex items-start space-x-3">
                <div className="text-3xl flex-shrink-0">
                  {sector?.emoji}
                </div>
                <div className="flex-1 min-w-0">
                  <h3 className="font-heading font-medium text-foreground mb-1">
                    {sector?.title}
                  </h3>
                  <p className="text-xs text-muted-foreground line-clamp-2">
                    {sector?.description}
                  </p>
                </div>
              </div>
              {isSelected && (
                <div className="absolute top-2 right-2">
                  <div className="w-6 h-6 bg-primary rounded-full flex items-center justify-center">
                    <Icon name="Check" size={12} className="text-primary-foreground" />
                  </div>
                </div>
              )}
            </button>
          );
        })}
      </div>
      {selectedInterests?.length > 0 && (
        <div className="bg-success/10 border border-success/20 rounded-lg p-4 mb-4">
          <div className="flex items-center space-x-2 mb-2">
            <Icon name="CheckCircle" size={16} className="text-success" />
            <span className="text-sm text-success font-medium">
              {selectedInterests?.length} {currentLanguage === 'hi' ? '‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§ö‡•Å‡§®‡•á ‡§ó‡§è' : 'sectors selected'}
            </span>
          </div>
          <div className="text-xs text-muted-foreground">
            {currentLanguage === 'hi' ?'‡§Ü‡§™ ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 3 ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§ö‡•Å‡§® ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç' :'You can select up to 3 sectors for better matching'
            }
          </div>
        </div>
      )}
      {errors?.interests && (
        <div className="bg-error/10 border border-error/20 rounded-lg p-4">
          <div className="flex items-center space-x-2">
            <Icon name="AlertCircle" size={16} className="text-error" />
            <span className="text-sm text-error">{errors?.interests}</span>
          </div>
        </div>
      )}
    </div>
  );
};

export default InterestsStep;